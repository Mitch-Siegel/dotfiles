

fun printPtr(uint8 *ptr->void)
{
	asm
	{
		push %r1

		mov %r0, (%bp+8)
		movb %r0, (%r0)
		out 1, %r0

		pop %r1
	};
}


fun printAddr(uint8 *ptr->void)
{
	asm
	{
		push %r1

		mov %r0, (%bp+8)
		out 2, %r0

		pop %r1
	};
}

fun printAddr2(uint8 **ptr->void)
{
	asm
	{
		push %r1

		mov %r0, (%bp+8)
		out 2, %r0

		pop %r1
	};
}


fun recurseDeeply(uint8 iter1, uint8 *p, uint8 iter2->void)
{
	if(iter1 > 0)
	{
		*p += 1;
		recurseDeeply((iter1 - 1), p, iter2);
	}
	else 
	{
		if(iter2 > 0)
		{
			*p += 2;
			recurseDeeply(iter1, p, (iter2 - 1));
		}
		else
		{
			printPtr(p);
		}
	}
}

fun varAddr(->void)
{
	uint8 a = 123;
	uint8 *p = &a;
	recurseDeeply(5, p, 5);
}

fun arrConstAddr(->void)
{
	uint8 arr[10];
	arr[3] = 123;
	uint8 *p = &arr[3];
	recurseDeeply(5, p, 5);
}

fun arrVarAddr(->void)
{
	uint8 arr[10];
	arr[3] = 123;
	uint8 i = 3;
	uint8 *p = &arr[i];
	recurseDeeply(5, p, 5);
}

fun main(->void)
{
	varAddr();
	arrConstAddr();
	arrVarAddr();
}