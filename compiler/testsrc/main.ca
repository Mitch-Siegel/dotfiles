#include "print.h"

fun arrTest(->void)
{
	u32 sums[10];

	u8 driver = 0;
	u8 i = 0;
	while(driver < 10)
	{
		u8 arr[10];
		arr[0] = 0;
		arr[1] = 1;
		i = 2;
		while(i < driver)
		{
			print('0' + i);
			arr[i] = arr[i - 1] + arr[i - 2];
			i += 1;
		}

		sums[driver] = 0;
		i = 0;
		while(i < driver)
		{
			sums[driver] += arr[i];
			printNum(arr[i]);
			i += 1;
		}
		driver += 1;
	}

	i = 0;
	while(i < 10)
	{
		printNum(sums[i]);
		i += 1;
	}
}

fun offsetTest(->void)
{
	u16 arr[10];
	*arr = 0;
	*(arr + 1) = 1;
	u8 i = 2;
	while(i < 10)
	{
		*(arr + i) = *(arr + (i - 1)) + *(arr + (i - 2));
		i += 1;
	}

	i = 0;
	while(i < 10)
	{
		printNum(arr[i]);
		i += 1;
	}
}

class B
{
	u8 stuff[15];
	u8 nBytes;
};

class Array
{
	u8 data[3];
	u16 bigData[5];
	class B b;
	class B *bp;
};

fun main(->void)
{
	printStr("This is a test of arrays", 1);
	arrTest();
	printStr("This is a test of the * operator (pointer arithmetic)", 1);
	offsetTest();

	printNum(123);
	printNum(345);

	class Array a;
	class Array *b = &a;
	a.data[0] = 234;
	a.bigData[2] = 16385;
	printNum(*(a.data));
	printNum(*(a.bigData + 2));

	b->data[1] = 235;
	b->bigData[3] = 16631;
	printNum(*(b->data + 1));
	printNum(*(b->bigData + 3));


	a.bp = &(a.b);
	a.b.nBytes = 2;
	printNum((a.b.nBytes));
	a.bp->nBytes = 3;
	printNum(a.bp->nBytes);


}