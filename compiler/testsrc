/*
https://projecteuler.net/problem=1

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

results:
1/15/23 - 1196487 instructions

*/

asm
	{
	entry code
	code:
	call test
	hlt
}
;

fun print(uint32 value->void)
{
	// store r0, pull the argument into a register, then output that register
	asm {
		mov %r0, (%bp+8)
		out 0, %r0
	}
	;
}

fun mod(uint32 a, uint32 divisor->uint32)
{
	while (a >= divisor)
	{
		a = a - divisor;
	}
	return a;
}

fun div(uint32 a, uint32 b->uint32)
{
	uint32 quotient = 0;
	while (a >= b)
	{
		a = a - b;
		quotient = quotient + 1;
	}
	return quotient;
}

fun printNum(uint32 num->void)
{
	uint8 outStr[16];
	uint32 digits = 1;
	if (num == 0)
	{
		print(48);
		digits = 0;
	}
	else
	{
		while (num > 0)
		{
			uint32 remainder = mod(num, 10);
			outStr[digits] = remainder + 48;
			num = div(num, 10);
			digits = digits + 1;
		}
	}

	uint32 i = 1;
	while (i < digits)
	{
		print(outStr[digits - i]);
		i = i + 1;
	}
	print(10); // newline
}

fun fibRec(uint32 n->uint32)
{
	if(n > 1)
	{
		return fibRec(n-1) + fibRec(n-2);
	}
	else
	{
		return n;
	}
}

fun test(->void)
{
	printNum(1235);
	uint8 i = 0;
	while(i < 20)
	{
		printNum(i);
		// printNum(fibRec(i));
		i = i + 1;
	}
}
