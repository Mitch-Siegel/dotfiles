#include "tests-common.sb"

struct eights
{
    public u8 a;
    public u8 b;
    public u8 c;
    public u8 d;
};

struct sixteens
{
    public u8 a;
    public u16 b;
    public u8 c;
};

fun testBasicCasting()
{
    u64 largeValue = 0x1234567890abcdef;
    printHex((u64)largeValue, 1);
    printHex((u32)largeValue, 1);
    printHex((u16)largeValue, 1);
    printHex((u8)largeValue, 1);
}

fun testBasicCasting2()
{
    u64 junk = 0xffffffffffffffff;
    u8 smallValue  = 0xee;
    u64 junk2 = 0xffffffffffffffff;
    printHex((u64)smallValue, 1);
    printHex((u32)smallValue, 1);
    printHex((u16)smallValue, 1);
    printHex((u8)smallValue, 1);
}

fun testCastStoring()
{
    u64 largerValue = 0xFFFFFFFFFFFFFFFF;
    printHex(largerValue, 1);

    largerValue = (u32)largerValue;
    printHex(largerValue, 1);

    largerValue = (u16)largerValue;
    printHex(largerValue, 1);

    largerValue += 2;
    printHex(largerValue, 1);

    largerValue = (u8)largerValue;
    printHex(largerValue, 1);
}

fun testStructPointerCasting()
{
    eights e;

    sixteens *sp = (sixteens *)&e;
    e.a = 0x12;
    e.b = 0x34;
    e.c = 0x56;
    e.d = 0x78;

    printHex(e.a, 1);
    printHex(e.b, 1);
    printHex(e.c, 1);
    printHex(e.d, 1);

    printHex(sp.a, 1);
    printHex(sp.b, 1);

    sp.b = 0xffff;
    printHex(e.a, 1);
    printHex(e.b, 1);
    printHex(e.c, 1);
    printHex(e.d, 1);
}


fun main()
{
    testBasicCasting();
    putc('\n');
    testBasicCasting2();
    putc('\n');
    testCastStoring();
    putc('\n');
    testStructPointerCasting();
    exit();
}
