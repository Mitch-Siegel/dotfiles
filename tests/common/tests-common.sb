#include "tests-common.sbh"

void fun uart_putc(u8 c)
{
    u8 *uart0 = 268435456;
    *(uart0) = c;
}

u32 fun mod(u32 a, u32 b)
{
	while(a >= b)
	{
		a -= b;
	}
	return a;
}

void fun printNum(u32 value)
{
	u8[10] chars;
	u8 nChars = 0;
	u32 vc = value;
	if(value == 0)
	{
		chars[0] = '0';
		nChars = 1;
	}

	while(value > 0)
	{
		u8 rv = mod(value, 10);
		chars[nChars] = rv + '0';
		value = value / 10;
		nChars = nChars + 1;
		chars[nChars] = 0;
	}
	
	while(nChars > 0)
	{
		uart_putc(chars[nChars - 1]);
		nChars -= 1;
	}
	uart_putc(10);
}

void fun printHex(u32 value)
{
	uart_putc('0');
	uart_putc('x');
	u8 i = 0;
	while(i < 4)
	{
		u8 thisByte = (value >> ((3 - i) * 8)) & 255;
		u8 j = 0;
		while(j < 2)
		{
			u8 thisNibble = (thisByte >> ((1 -j) * 4)) & 15;
			if(thisNibble < 10)
			{
				uart_putc('0' + thisNibble);
			}
			else
			{
				uart_putc('A' + (thisNibble- 10));
			}
			j = j + 1;
		}


		i = i + 1;
	}
}

u32 fun printStr(u8 *str)
{
	u32 idx = 0;
	while(str[idx] != 0)
	{
		uart_putc(str[idx]);
		idx = idx + 1;
	}
	return idx;
}

/*
FINISHER_FAIL = 0x3333,
FINISHER_PASS = 0x5555,
FINISHER_RESET = 0x7777
*/
void fun exit() asm
{
    li a0, 0x100000
    li a1, 0x5555
    sw a1,0(a0)
}
